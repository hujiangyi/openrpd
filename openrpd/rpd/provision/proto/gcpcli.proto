/*
 * Copyright (c) 2016 Cisco and/or its affiliates, and 
 *                    Cable Television Laboratories, Inc. ("CableLabs")
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

 /*
  * File has been generated by proto_generator.py
  */

syntax = "proto2";


message t_Gcp {
    message t_GcpSession {
        optional string session = 1;
    }

    message t_ShowSessionStatistics {
        required t_GcpSession sessions = 1;
        optional uint32 Rx = 2;
        optional uint32 RxRunt = 3;
        optional uint32 RxFrag = 4;
        optional uint32 RxInvalidLen = 5;
        optional uint32 RxDecodeFail = 6;
        optional uint32 RxDecodeFrag = 7;
        optional uint32 RxSessionErr = 8;
        optional uint32 RxSessionClose = 9;
        optional uint32 RxNoData = 10;
        optional uint32 RxSockErr = 11;
        optional uint32 RxQEmpty = 12;

        optional uint32 Tx = 13;
        optional uint32 TxQEmpty = 14;
        optional uint32 TxQFull = 15;
        optional uint32 TxFrag = 16;
        optional uint32 TxEncodeErr = 17;
        optional uint32 TxEncodeFail = 18;
        optional uint32 TxSessionErr = 19;
        optional uint32 TxSockErr = 20;
    }
    repeated t_ShowSessionStatistics ShowGcpStats = 1;


    message t_ShowGcpSession {
        repeated t_GcpSession ActiveSessions = 1;
        repeated t_GcpSession PrincipalSessions = 2;
        repeated t_GcpSession NonPrincipalSessions = 3;
        optional t_GcpSession PrincipalCandidateSession = 4;
        repeated t_GcpSession FailedSessions = 5;
    }
    optional t_ShowGcpSession ShowGcpSession = 2;

    message t_GcpLogging {
        optional uint32 module = 1;
        optional string level = 2;
    }
    optional t_GcpLogging GcpLogging = 3;

}
