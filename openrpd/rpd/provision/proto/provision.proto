/*
 * Copyright (c) 2016 Cisco and/or its affiliates, and 
 *                    Cable Television Laboratories, Inc. ("CableLabs")
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

 /*
  * File has been generated by proto_generator.py
  */

syntax = "proto2";

enum t_event_id {
    AGENTTYPE_INTERFACE_STATUS = 1;
    AGENTTYPE_8021X = 2;
    AGENTTYPE_DHCP = 3;
    AGENTTYPE_TOD = 4;
    AGENTTYPE_IPSEC = 5;
    AGENTTYPE_GCP = 6;
    AGENTTYPE_PTP = 7;
    AGENTTYPE_L2TP = 8;
}

message msg_agent_parameter {
	required int32 agent_id = 1;
	required string parameter = 2;
}

message msg_ccap_core_ctrl {
	enum t_ccap_core_action {
		ADD = 1;
		DEL = 2;
		UPDATE_PARAMETER = 3;
	}

	required string ccap_core_id = 1;  // when del we need this value
	required t_ccap_core_action action = 2;
	repeated msg_agent_parameter parameters = 3;
}

message msg_ccap_core_ctrl_rsp {
	enum t_ccap_core_acion_status {
		OK = 0;
		FAIL = 1;
	}

	required string ccap_core_id =1;
	required t_ccap_core_acion_status status = 2;
	required string reason = 3;
}

message msg_magager_api {
	optional msg_ccap_core_ctrl core_ctrl = 1;
}

message msg_magager_api_rsp {
	optional msg_ccap_core_ctrl_rsp core_ctrl_rsp = 1;
}

message t_Provision {

	enum t_ProvisionType {
		SHOW_PROVISION_ALL = 1;
		SHOW_PROVISION_CCAP_CORE = 2;
		SHOW_PROVISION_INTERFACE_STATUS = 3;
		SHOW_PROVISION_MACSEC = 4;
		SHOW_PROVISION_DHCP = 5;
		SHOW_PROVISION_TOD = 6;
		SHOW_PROVISION_IPSEC = 7;
		SHOW_PROVISION_GCP = 8;
		SHOW_PROVISION_PTP = 9;
		SHOW_PROVISION_L2TP = 10;
		TEST_PROVISION_CCAP_CORE_REMOVE_CORE = 11;
		TEST_PROVISION_CCAP_CORE_ADD_CORE = 12;
		TEST_PROVISION_CHANGE_STATE = 13;
		TEST_PROVISION_TRIGGER_STATUS = 14;
		SET_PROVISION_LOG_LEVEL = 15;
		SET_PROVISION_AGENT_LOG_LEVEL = 16;
		SHOW_PC_REBOOT_HOLD = 17;
		SET_PC_REBOOT_HOLD = 18;
		CLEAR_PC_REBOOT_HOLD = 19;
		REBOOT = 20;
		SSD_START = 30;
		SSD_GET_AF_TYPE = 31;
		SSD_END = 32;
		SHOW_PROVISION_STATE_HISTORY = 33;
		CLEAR_PROVISION_STATE_HISTORY = 34;
		SHOW_PROVISION_CORE_STATISTIC = 35;
		SHOW_PROVISION_MANAGER_STATE = 36;
		SHOW_PROVISION_MANAGER_STATE_HISTORY = 37;
	}
	enum t_DataResult {
		RESULT_NONE = 0;
		RESULT_OK = 1;
		RESULT_FAIL = 2;
	}
    required t_ProvisionType MsgType = 1;
    optional t_DataResult result = 2;
    optional bytes parameter = 3;
}
